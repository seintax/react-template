/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com *//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	--tw-border-opacity: 1;
	border-color: rgba(229, 231, 235, var(--tw-border-opacity));
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-blur: var(--tw-empty,/*!*/ /*!*/);
	--tw-brightness: var(--tw-empty,/*!*/ /*!*/);
	--tw-contrast: var(--tw-empty,/*!*/ /*!*/);
	--tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
	--tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
	--tw-invert: var(--tw-empty,/*!*/ /*!*/);
	--tw-saturate: var(--tw-empty,/*!*/ /*!*/);
	--tw-sepia: var(--tw-empty,/*!*/ /*!*/);
	--tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
	--tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.top-0 {
	top: 0px;
}
.left-0 {
	left: 0px;
}
.top-\[150px\] {
	top: 150px;
}
.left-\[50px\] {
	left: 50px;
}
.top-\[20px\] {
	top: 20px;
}
.isolate {
	isolation: isolate;
}
.z-10 {
	z-index: 10;
}
.z-\[-1\] {
	z-index: -1;
}
.z-auto {
	z-index: auto;
}
.mt-\[100px\] {
	margin-top: 100px;
}
.mt-\[5px\] {
	margin-top: 5px;
}
.mt-\[10px\] {
	margin-top: 10px;
}
.mr-\[10px\] {
	margin-right: 10px;
}
.mr-\[15px\] {
	margin-right: 15px;
}
.ml-\[30px\] {
	margin-left: 30px;
}
.mt-\[20px\] {
	margin-top: 20px;
}
.mr-\[20px\] {
	margin-right: 20px;
}
.flex {
	display: flex;
}
.hidden {
	display: none;
}
.h-\[100vh\] {
	height: 100vh;
}
.h-screen {
	height: 100vh;
}
.h-\[600px\] {
	height: 600px;
}
.h-\[100px\] {
	height: 100px;
}
.h-\[100\%\] {
	height: 100%;
}
.h-\[50px\] {
	height: 50px;
}
.h-\[50\%\] {
	height: 50%;
}
.h-\[calc\(100vh-100px\)\] {
	height: calc(100vh - 100px);
}
.h-\[300px\] {
	height: 300px;
}
.h-\[15px\] {
	height: 15px;
}
.h-full {
	height: 100%;
}
.w-\[100vw\] {
	width: 100vw;
}
.w-screen {
	width: 100vw;
}
.w-\[500px\] {
	width: 500px;
}
.w-full {
	width: 100%;
}
.w-\[100\%\] {
	width: 100%;
}
.w-\[50px\] {
	width: 50px;
}
.w-\[90px\] {
	width: 90px;
}
.w-\[300px\] {
	width: 300px;
}
.w-\[80px\] {
	width: 80px;
}
.origin-center {
	transform-origin: center;
}
.rotate-\[45deg\] {
	--tw-rotate: 45deg;
	transform: var(--tw-transform);
}
.rotate-\[80deg\] {
	--tw-rotate: 80deg;
	transform: var(--tw-transform);
}
.rotate-\[60deg\] {
	--tw-rotate: 60deg;
	transform: var(--tw-transform);
}
.rotate-\[40deg\] {
	--tw-rotate: 40deg;
	transform: var(--tw-transform);
}
.rotate-\[20deg\] {
	--tw-rotate: 20deg;
	transform: var(--tw-transform);
}
.rotate-\[0deg\] {
	--tw-rotate: 0deg;
	transform: var(--tw-transform);
}
@keyframes bounce {

	0%, 100% {
		transform: translateY(-25%);
		animation-timing-function: cubic-bezier(0.8,0,1,1);
	}

	50% {
		transform: none;
		animation-timing-function: cubic-bezier(0,0,0.2,1);
	}
}
.animate-bounce {
	animation: bounce 1s infinite;
}
@keyframes ping {

	75%, 100% {
		transform: scale(2);
		opacity: 0;
	}
}
.animate-ping {
	animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}
.cursor-pointer {
	cursor: pointer;
}
.flex-col {
	flex-direction: column;
}
.items-center {
	align-items: center;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}
.overflow-auto {
	overflow: auto;
}
.overflow-hidden {
	overflow: hidden;
}
.rounded-\[10px\] {
	border-radius: 10px;
}
.rounded-\[50\%\] {
	border-radius: 50%;
}
.rounded-tl-\[10px\] {
	border-top-left-radius: 10px;
}
.rounded-br-\[10px\] {
	border-bottom-right-radius: 10px;
}
.border-\[5px\] {
	border-width: 5px;
}
.border-\[\#ffffff\] {
	--tw-border-opacity: 1;
	border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}
.bg-\[\#000000\] {
	--tw-bg-opacity: 1;
	background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.bg-\[\#d3d3d3\] {
	--tw-bg-opacity: 1;
	background-color: rgba(211, 211, 211, var(--tw-bg-opacity));
}
.bg-\[\#115bfc\] {
	--tw-bg-opacity: 1;
	background-color: rgba(17, 91, 252, var(--tw-bg-opacity));
}
.bg-\[\#eeeef0\] {
	--tw-bg-opacity: 1;
	background-color: rgba(238, 238, 240, var(--tw-bg-opacity));
}
.bg-\[\#7c7c7c\] {
	--tw-bg-opacity: 1;
	background-color: rgba(124, 124, 124, var(--tw-bg-opacity));
}
.bg-\[\#f39b18\] {
	--tw-bg-opacity: 1;
	background-color: rgba(243, 155, 24, var(--tw-bg-opacity));
}
.bg-\[\#c718f3\] {
	--tw-bg-opacity: 1;
	background-color: rgba(199, 24, 243, var(--tw-bg-opacity));
}
.bg-\[\#0f32cc\] {
	--tw-bg-opacity: 1;
	background-color: rgba(15, 50, 204, var(--tw-bg-opacity));
}
.bg-\[\#eeff01\] {
	--tw-bg-opacity: 1;
	background-color: rgba(238, 255, 1, var(--tw-bg-opacity));
}
.bg-\[\#03f2fa\] {
	--tw-bg-opacity: 1;
	background-color: rgba(3, 242, 250, var(--tw-bg-opacity));
}
.bg-\[\#07f807\] {
	--tw-bg-opacity: 1;
	background-color: rgba(7, 248, 7, var(--tw-bg-opacity));
}
.bg-\[\#ff04d5\] {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 4, 213, var(--tw-bg-opacity));
}
.bg-transparent {
	background-color: transparent;
}
.bg-\[\#219aeb\] {
	--tw-bg-opacity: 1;
	background-color: rgba(33, 154, 235, var(--tw-bg-opacity));
}
.bg-opacity-40 {
	--tw-bg-opacity: 0.4;
}
.bg-opacity-30 {
	--tw-bg-opacity: 0.3;
}
.bg-gradient-to-r {
	background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-\[\#079ec4ff\] {
	--tw-gradient-from: #079ec4ff;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(7, 158, 196, 0));
}
.from-\[\#ee89d8\] {
	--tw-gradient-from: #ee89d8;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(238, 137, 216, 0));
}
.via-\[\#d2e470\] {
	--tw-gradient-stops: var(--tw-gradient-from), #d2e470, var(--tw-gradient-to, rgba(210, 228, 112, 0));
}
.to-\[\#0654fdff\] {
	--tw-gradient-to: #0654fdff;
}
.to-\[\#6ae766\] {
	--tw-gradient-to: #6ae766;
}
.p-\[10px\] {
	padding: 10px;
}
.px-\[20px\] {
	padding-left: 20px;
	padding-right: 20px;
}
.px-\[10px\] {
	padding-left: 10px;
	padding-right: 10px;
}
.py-\[10px\] {
	padding-top: 10px;
	padding-bottom: 10px;
}
.px-\[30px\] {
	padding-left: 30px;
	padding-right: 30px;
}
.pb-\[20px\] {
	padding-bottom: 20px;
}
.text-center {
	text-align: center;
}
.text-\[18px\] {
	font-size: 18px;
}
.text-\[15px\] {
	font-size: 15px;
}
.text-\[14px\] {
	font-size: 14px;
}
.text-\[16px\] {
	font-size: 16px;
}
.text-\[30px\] {
	font-size: 30px;
}
.text-\[35px\] {
	font-size: 35px;
}
.text-\[20px\] {
	font-size: 20px;
}
.text-\[50px\] {
	font-size: 50px;
}
.font-bold {
	font-weight: 700;
}
.leading-\[45px\] {
	line-height: 45px;
}
.text-\[\#000000\] {
	--tw-text-opacity: 1;
	color: rgba(0, 0, 0, var(--tw-text-opacity));
}
.text-\[\#fa0606\] {
	--tw-text-opacity: 1;
	color: rgba(250, 6, 6, var(--tw-text-opacity));
}
.text-\[\#ffffff\] {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-white {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.opacity-100 {
	opacity: 1;
}
.opacity-\[15\%\] {
	opacity: 15%;
}
.shadow {
	--tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.drop-shadow-2xl {
	--tw-drop-shadow: drop-shadow(0 25px 25px rgba(0, 0, 0, 0.15));
	filter: var(--tw-filter);
}
.transition {
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.duration-100 {
	transition-duration: 100ms;
}
.duration-500 {
	transition-duration: 500ms;
}
.ease-in {
	transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.bordered {
    border: 1px dashed #ffffff;
    padding: 0.9em 0.7em;
    margin-bottom: -1px;
    margin-left: -1px;
    flex: none;
}

.bordered-l {
    border-top: 1px dashed #ffffff;
    border-bottom: 1px dashed #ffffff;
    border-left: 1px dashed #ffffff;
    padding: 0.9em 0.7em;
    margin-bottom: -1px;
    margin-left: -1px;
    flex: none;
}

.bordered-r {
    border-top: 1px dashed #ffffff;
    border-bottom: 1px dashed #ffffff;
    border-right: 1px dashed #ffffff;
    padding: 0.9em 0.7em;
    margin-bottom: -1px;
    margin-left: 0px;
    flex: none;
}

.bordered-sm {
    border: 1px dashed #ffffff;
    padding: 0.9em 0.7em;
    margin-bottom: -1px;
}

.no-select {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
}

.h-min-600 {
    max-height: 600px;
}

.glassmorph {
    background: rgba(49, 1, 1, 0.7);
    background-image: linear-gradient(rgb(255, 0, 0, 0.7), rgb(255, 255, 0, 0.7));
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(13.5px);
    -webkit-backdrop-filter: blur(10.5px);
    /* border: 1px solid rgba(255, 255, 255, 0.18); */
}

.bungee {
    font-family: 'Bungee', cursive;
    backdrop-filter: blur(13.5px);
    -webkit-backdrop-filter: blur(13.5px);
}

.consolas {
    font-family: 'Consolas';
}

.group:hover>div {
    background-color: rgb(120, 113, 212, 0.5);
}

.neubrutalism {
    border: 3px solid black;
    box-shadow: 5px 5px black;
    transform: rotate(-5deg);
    outline: none;
}

.neubrutalism-plain {
    border: 3px solid black;
    box-shadow: 5px 5px black;
    outline: none;
}

.hover\:border-b-\[5px\]:hover {
	border-bottom-width: 5px;
}

.hover\:border-b-\[\#ffffff\]:hover {
	--tw-border-opacity: 1;
	border-bottom-color: rgba(255, 255, 255, var(--tw-border-opacity));
}

.hover\:bg-\[\#dd890a\]:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(221, 137, 10, var(--tw-bg-opacity));
}

.hover\:bg-\[\#b80ae4\]:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(184, 10, 228, var(--tw-bg-opacity));
}

.hover\:bg-\[\#0e8bdf\]:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(14, 139, 223, var(--tw-bg-opacity));
}

.hover\:pt-\[5px\]:hover {
	padding-top: 5px;
}

.hover\:text-\[\#c8fd06\]:hover {
	--tw-text-opacity: 1;
	color: rgba(200, 253, 6, var(--tw-text-opacity));
}

.hover\:ease-in:hover {
	transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}